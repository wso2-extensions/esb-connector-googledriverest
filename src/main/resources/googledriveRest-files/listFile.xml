<?xml version="1.0" encoding="UTF-8"?>
<!--
 ~  Copyright (c) 2016, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 ~
 ~  WSO2 Inc. licenses this file to you under the Apache License,
 ~  Version 2.0 (the "License"); you may not use this file except
 ~  in compliance with the License.
 ~  You may obtain a copy of the License at
 ~
 ~    http://www.apache.org/licenses/LICENSE-2.0
 ~
 ~  Unless required by applicable law or agreed to in writing,
 ~  software distributed under the License is distributed on an
 ~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 ~  KIND, either express or implied.  See the License for the
 ~  specific language governing permissions and limitations
 ~  under the License.
-->
<template name="listFile" xmlns="http://ws.apache.org/ns/synapse">
    <parameter name="apiUrl" description="API Url to access the endpoint"/>
    <parameter name="corpus" description="The body of items"/>
    <parameter name="maxResults" description="Maximum number of files to return"/>
    <parameter name="orderBy" description="A comma-separated list of sort keys"/>
    <parameter name="pageToken" description="Page token for files"/>
    <parameter name="query" description="Query string for searching for files"/>
    <parameter name="spaces" description="A comma-separated list of spaces to query"/>
    <sequence>
        <property name="uri.var.apiUrl" expression="$func:apiUrl"/>
        <property name="uri.var.corpus" expression="$func:corpus"/>
        <property name="uri.var.maxResults" expression="$func:maxResults"/>
        <property name="uri.var.orderBy" expression="$func:orderBy"/>
        <property name="uri.var.pageToken" expression="$func:pageToken"/>
        <property name="uri.var.query" expression="$func:query"/>
        <property name="uri.var.spaces" expression="$func:spaces"/>
        <property name="uri.var.apiParameters" value=""/>
        <filter xpath="(not(get-property('uri.var.corpus') = '' or (not(string(get-property('uri.var.corpus'))))))">
            <then>
                <property name="uri.var.apiParameters"
                          expression="fn:concat(get-property('uri.var.apiParameters'),'corpus=',get-property('uri.var.corpus'))"/>
            </then>
        </filter>
        <filter xpath="(not(get-property('uri.var.maxResults') = '' or (not(string(get-property('uri.var.maxResults'))))))">
            <then>
                <property name="uri.var.apiParameters"
                          expression="fn:concat(get-property('uri.var.apiParameters'),'maxResults=',get-property('uri.var.maxResults'))"/>
            </then>
        </filter>
        <filter xpath="(not(get-property('uri.var.orderBy') = '' or (not(string(get-property('uri.var.orderBy'))))))">
            <then>
                <property name="uri.var.apiParameters"
                          expression="fn:concat(get-property('uri.var.apiParameters'),'orderBy=',get-property('uri.var.orderBy'))"/>
            </then>
        </filter>
        <filter xpath="(not(get-property('uri.var.pageToken') = '' or (not(string(get-property('uri.var.pageToken'))))))">
            <then>
                <property name="uri.var.apiParameters"
                          expression="fn:concat(get-property('uri.var.apiParameters'),'pageToken=',get-property('uri.var.pageToken'))"/>
            </then>
        </filter>
        <filter xpath="(not(get-property('uri.var.query') = '' or (not(string(get-property('uri.var.query'))))))">
            <then>
                <property name="uri.var.apiParameters"
                          expression="fn:concat(get-property('uri.var.apiParameters'),'q=',get-property('uri.var.query'))"/>
            </then>
        </filter>
        <filter xpath="(not(get-property('uri.var.spaces') = '' or (not(string(get-property('uri.var.spaces'))))))">
            <then>
                <property name="uri.var.apiParameters"
                          expression="fn:concat(get-property('uri.var.apiParameters'),'spaces=',get-property('uri.var.spaces'))"/>
            </then>
        </filter>
        <call>
            <endpoint>
                <http method="Get"
                      uri-template="{uri.var.apiUrl}/drive/v2/files?{+uri.var.apiParameters}"/>
            </endpoint>
        </call>
    </sequence>
</template>